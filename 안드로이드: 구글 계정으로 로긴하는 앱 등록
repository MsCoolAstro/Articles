구글 계정으로 로긴하는 안드로이드 앱 만들기 https://developers.google.com/identity/

1. Android Studio에서 app id를 정한다.
2. Android Studio에서 Signed APK용 키(*.jks)를 만든다.
3. Command에서 SHA1 fingerprint를 만든다.
    - C:\Program Files\Java\jdk1.8.0_211\bin 이동
    - Release SHA: keytool -list -v -keystore C:\Users\Awesomeguy\Desktop\Keys\ReformaLab.jks

4. 'https://developers.google.com/identity/sign-in/android/start-integrating'에 가서 credentials.json 파일을 만든다.

5. 위에서 만들어진 credentials.json 파일을 Android Studio에 넣는다.
6. Signed APK가 나온다.

7. APK를 Google Play Console에 올린다.






구글플레이 콘솔의 Release management의 App sigining에서 얻은 app sigining fingerprint를
Google api의 credentilas의 OAuth client에 먹여 보았어요.





			private inner class RetrieveTokenTask : AsyncTask<GoogleSignInAccount, Void, String>()
			{




				override fun doInBackground(vararg params: GoogleSignInAccount): String?
				{
					val accountName = params[0]
					val scopes = "oauth2:profile email"
					var token: String? = null
					try
					{
						token = GoogleAuthUtil.getToken(applicationContext, accountName.account, scopes)
						Log.e("tokentokentokentokentokentoken", token)
					}
					catch (e: IOException)
					{
						Log.e("Intro", e.message)
					}
					catch (e: UserRecoverableAuthException)
					{
						startActivityForResult(e.intent, RC_SIGN_IN)
						//REQ_SIGN_IN_REQUIRED = 55664;
					}
					catch (e: GoogleAuthException)
					{
						Log.e("Intro", e.message)
					}
					return token;
				}




				override fun onPostExecute(result: String?)
				{
					super.onPostExecute(result)
					Log.i("Intro", result)
				}





			}




