- IAM
  . AWSLambdaExecute 추가

- S3
  . 버킷 만들기 -> 버킷 이름 입력 -> 생성

- API Gateway 
  . 리소스 생성 -> 이름 입력 -> Post 메서드 생성 
  . 메서드 생성 후 통합 요청 -> 매핑 템플릿 -> 정의된 템플릿이 없는 경우(권장) -> application/jpeg, application/jpg, application/png 입력 후 아래 내용 추가 
    {
        "test":"$input.body"
    }
  . 설정 -> 이진 미디어 형식 -> application/jpeg, application/jpg, application/png 추가
  * 매핑 템플릿은 API Gateway에서 Lambda로 데이터를 전송할 때, 어떤 형태로 전송할 것 인지 미리 템플릿 형식으로 정의. input.body 를 test로 받아서 Lambda에서 사용하는 것으로 이해
  * 이진 미디어 형식 설정 이유는 application 형식으로 요청을 받는 경우 API Gateway에서 자체적으로 파일데이터를 이진 바이너리 형식으로 변환하여 처리
- Lambda
  . IAM 권한 추가
  . 아래와 같이 코드 입력

import json
import base64
import boto3

import logging
logger = logging.getLogger()
logger.setLevel(logging.INFO)

def lambda_handler(event, context):

    s3 = boto3.client("s3")
    
    # get_file_content = event["test"]
    # decode_content = base64.b64decode(get_file_content)
    
    s3_upload = s3.put_object(Bucket="upload-api-tutorial2", Key = "abcdefg.jpg", Body = base64.b64decode(event["test"]));
    
    # TODO implement
    return {
        'statusCode': 200,
        'body': json.dumps('Hello from Lambda!')
    }

- post man 
  . POST 선택
  . URL : Apigateway에서 URL + 리소스 이름 
  . Headers : Content-Type + application/jpg 
  . Body -> binary 에서 파일 선택 후 request


- reference 
  . https://www.youtube.com/watch?v=ETb2eVJs5UE
